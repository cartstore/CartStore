<?php
/**
 * @brief Defines the class representing the Checkout by Amazon Module
 * @catagory osCommerce Checkout by Amazon Payment Module
 * @author Neil Corkum
 * @author Allison Naaktgeboren
 * @author Joshua Wong
 * @copyright Portions copyright 2007-2009 Amazon Technologies, Inc
 * @copyright portions copyright osCommerce, 2002-2008
 * @license GPL v2, please see LICENSE.txt
 * @access public
 * @version $Id: $
 * @note Although Fulfillment Network is an item level tag in the official xml schema, the 
 *	decision applies to whole inventory, and so is stored in this class  
 * 
 */
/*
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
*/
require_once(DIR_FS_CATALOG.'checkout_by_amazon/checkout_by_amazon_constants.php');

class checkout_by_amazon {
    var $code, $title, $description, $enabled;
    var $sort_order, $form_action_url;
    var $aws_access_id, $aws_secret_key;
    var $signing;
    var $cart_expiration;
    var $merchant_id;
    // post-order management variables
    // Used to sync Amazon orders into the oscommerce databases.
    var $post_order_management_enabled;
    var $merchant_email;
    var $merchant_password;
    var $merchant_token;
    var $merchant_name;
    // other configuration to determine:
    //      production / sandbox environments
    //      fulfillment network (AFN / MFN)
    //      etc.
    var $operating_env;
    var $callback_required, $callback_shipping, $callback_shipping_carrier, $callback_taxes, $callback_is_shipping_taxed, $callback_processOrderOnFailure;
    var $fulfillment_network;
    var $success_ret_url, $cancel_ret_url;
    var $integrator_id, $integrator_name;
    var $button_size, $button_style;

/**
 * @brief creates a new instance of checkout_by_amazon, one per instance of osCommerce 
 * @post one instance of the class is created 
 */
    function checkout_by_amazon() {

	//accquiring path defintions
	require_once(DIR_FS_CATALOG.'cartstoreadmin/includes/configure.php');

	$this->code = 'checkout_by_amazon';
	$this->title = MODULE_PAYMENT_CHECKOUTBYAMAZON_TEXT_TITLE;
	$this->description =
	    MODULE_PAYMENT_CHECKOUTBYAMAZON_TEXT_DESCRIPTION;
	$this->sort_order = MODULE_PAYMENT_CHECKOUTBYAMAZON_SORT_ORDER;
	$this->enabled =
	    (MODULE_PAYMENT_CHECKOUTBYAMAZON_STATUS == 'True');
	$this->aws_access_id =
	    trim(MODULE_PAYMENT_CHECKOUTBYAMAZON_AWSACCESSID);
	$this->aws_secret_key =
	    trim(decrypt(MODULE_PAYMENT_CHECKOUTBYAMAZON_AWSSECRETKEY));
	$this->merchant_id =
	    trim(MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTID);

	if (MODULE_PAYMENT_CHECKOUTBYAMAZON_OPERATING_ENVIRONMENT ==
	    'Production') {
	    $this->form_action_url = PROD_ENDPOINT.$this->merchant_id;	// URL to post production orders to
	} else {
	    // posting to sandbox url
	    $this->form_action_url = SANDBOX_ENDPOINT.$this->merchant_id;
	}

	$this->signing =
	    (MODULE_PAYMENT_CHECKOUTBYAMAZON_SIGNING == 'True');
	
	$this->cart_expiration =
	    (int) trim(MODULE_PAYMENT_CHECKOUTBYAMAZON_CART_EXPIRATION);
	$this->merchant_id =
            trim(MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTID);

        // post-order management settings
        // Used to sync Amazon orders into the oscommerce databases.
        $this->post_order_management_enabled =
            (MODULE_PAYMENT_CHECKOUTBYAMAZON_ORDER_MANAGEMENT == 'True');
	$this->merchant_email =
            trim(MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTEMAIL);
	$this->merchant_password =
            trim(decrypt(MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTPASSWORD));
	$this->merchant_token =
            trim(MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTTOKEN);
	$this->merchant_name =
            trim(MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTNAME);

        // production or sandbox
	$this->operating_env =
	    MODULE_PAYMENT_CHECKOUTBYAMAZON_OPERATING_ENVIRONMENT;

	// Fulfillment by Amazon settings
	if (MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_FBA == 'True') {
	    $this->fulfillment_network = AMAZON_FULFILLMENT;
	} else {
	    $this->fulfillment_network = MERCHANT_FULFILLMENT;
	}
	
	// Optional for Callback calculations
 	if ($this->callback_required = 
	    (MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_CALLBACK == 'True')) {
		if (MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_SHIPPING == 'True') {
			$this->callback_shipping = 'true';
                        $this->callback_shipping_carrier = MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_SHIPPING_CARRIER;
                } else {
                        $this->callback_shipping = 'false';
                }
		if (MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_TAXES == 'True') {
			$this->callback_taxes = 'true';
                    
                        if (MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_IS_SHIPPING_TAXED == 'True') {
                            $this->callback_is_shipping_taxed = 'true';
                        }
                        else {
                            $this->callback_is_shipping_taxed = 'false';
                        }
                } else {
			$this->callback_taxes = 'false';
                }
		
                // always sent to false - because we are doing a one-to-one 
                // shipping mapping.
                // In case the callback fails, we would not know how to perform
                // the reverse shipping mapping.
                $this->callback_processOrderOnFailure = 'false';

	}

	// Optional post checkout URLs
	if (MODULE_PAYMENT_CHECKOUTBYAMAZON_RETURN_URL != NULL) {
	    $this->success_ret_url =
		MODULE_PAYMENT_CHECKOUTBYAMAZON_RETURN_URL;
	} else {
	    $this->success_ret_url =
		HTTP_CATALOG_SERVER.DIR_WS_CATALOG.
		'index.php';
	}

	if (MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_URL != NULL) {
	    $this->callback_ret_url =
		MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_URL;
	} else {
	    $this->callback_ret_url =
		HTTP_CATALOG_SERVER.DIR_WS_CATALOG.
		'index.php';
	}

	if (MODULE_PAYMENT_CHECKOUTBYAMAZON_CANCEL_URL != NULL) {
	    $this->cancel_ret_url =
		MODULE_PAYMENT_CHECKOUTBYAMAZON_CANCEL_URL;
	} else {
	    $this->cancel_ret_url =
		HTTP_CATALOG_SERVER.DIR_WS_CATALOG.'index.php';
	}

	$this->integrator_id = INTEGRATOR_ID;

	$this->integrator_name = INTEGRATOR_NAME;

	// setting checkout button style/size
	// since these will be used in url, case has to be removed
	$this->button_size =
	    strtolower(MODULE_PAYMENT_CHECKOUTBYAMAZON_BUTTON_SIZE);
	$this->button_style =
	    strtolower(MODULE_PAYMENT_CHECKOUTBYAMAZON_BUTTON_STYLE);

    }

/**
 * @brief selects the code string & the title 
 * @return returns an array keyed with id for the code, and the title of the module keyed with module 
 */
    function selection() {
	return array('id' => $this->code, 'module' =>$this->title);
    }

/**
 * @brief addresses any calls which should take place during start up
 * @post ignores checkout by amazon module in the osCommer checkout page
 */
    function before_process() {
	tep_redirect(tep_href_link(FILENAME_SHOPPING_CART));
    }

/**
 * @brief determines if config table has been turned on
 * @return number of rows within the config table 
 */
    function check() {
	if (!isset($this->_check)) {
	    $check_query =
		tep_db_query("select configuration_value from ".
			     TABLE_CONFIGURATION.
			     " where configuration_key = 'MODULE_PAYMENT_CHECKOUTBYAMAZON_STATUS'");
	    $this->_check = tep_db_num_rows($check_query);
	}
	return $this->_check;
    }

/**
 * @brief stub function required of /payment files 
 */
    function update_status() {
    }

/**
 * @brief stub function required of /payment files
 */
    function javascript_validation() {
	return false;
    }
/**
 * @brief stub function required of /payment files
 */
    function pre_confirmation_check() {
	return false;
    }

/**
 * @brief stub function required of /payment files
 */
    function confirmation() {
	return false;
    }

/**
 * @brief stub function required of /payment files
 */
    function process_button() {
    }

/**
 * @brief stub function required of /payment files
 */
    function after_process() {
	return false;
    }

/**
 * @brief stub function required of /payment files
 */
    function output_error() {
	return false;
    }

/**
 * @brief installs all the merchant settings in database 
 * @post entires are installed in database, with assiocated strings (will be visible in Admin UI)
 * @see keys() 
 * @note all entires in install must be entered into mySQL via keys()
 * @note this function required by this name for admin/modules.php. Allows it to be called in UI
 * @note the style types are hardcoded here, otherwise Button Style will not highlight
 *	default value in UI menu  
 */
    function install() {
        $keyFile = getKeyFilename();

        if (!install_key_file($keyFile)) {
           echo "Unable to install key file to location: " . $keyFile . "<br/>" .
                "Please ensure that the location is writable.";
           exit;
        }

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/>GENERAL OPTIONS<br/><hr/><br/>Enable Checkout by Amazon Module', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_STATUS', 'True', 'Allow customers to use Checkout by Amazon on your web store', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Your Checkout by Amazon merchant ID', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTID', '', '<a href=\'https://sellercentral.amazon.com/gp/cba/seller/account/settings/user-settings-view.html/ref=sc_navbar_m1k_cba_order_pipe_settings\' target=\'_blank\'/>Click here to get your MerchantID</a>', '6', '4', now())");

        // post-order management information
        tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/><br/>POST ORDER MANAGEMENT OPTIONS<br/><br/><hr/><br/>Enable Order Management', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_ORDER_MANAGEMENT', 'False', 'Manage orders placed through Checkout by Amazon within your OSCommerce admin UI', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Checkout by Amazon Merchant Login Id', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTEMAIL', '', '', '6', '4', now())");
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added, use_function, set_function) values ('Checkout by Amazon Merchant Password<br/>(<i>this field will be encrypted when displayed for security.</i>)', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTPASSWORD', '', '', '6', '4', now(), 'crypt', 'tep_draw_input_password_field(')");
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Checkout by Amazon Merchant Token', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTTOKEN', '', '<a href=\'https://sellercentral.amazon.com/gp/seller/configuration/account-info-page.html/ref=sc_navbar_m1k_seller_cfg\' target=\'_blank\'/>Click here to get your Merchant Token</a>', '6', '4', now())");
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Checkout by Amazon Merchant Name', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTNAME', '', '<a href=\'https://sellercentral.amazon.com/gp/seller/configuration/account-info-page.html/ref=sc_navbar_m1k_seller_cfg\' target=\'_blank\'/>Click here to get your Merchant Name</a>', '6', '4', now())");

        // signing
        tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/>SIGNING OPTIONS<br/><hr/><br/>Enable Order Signing', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_SIGNING', 'True', '<i>Please note that Amazon recommends Signed carts. The signature helps to validate that the cart is not manipulated between your website and Amazon Payments. </i>', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Operating environment', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_OPERATING_ENVIRONMENT', 'Sandbox', 'Select whether Checkout by Amazon should operate in the test sandbox or the live production environment. <br><i>Note: Currently Post Order Management cannot be tested on Sandbox</i>', '6', '3', 'tep_cfg_select_option(array(\'Production\', \'Sandbox\'), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Fulfillment by Amazon', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_FBA', 'False', 'Enables the Fulfillment by Amazon service. Please note that you must use AWS signed orders in order to use Fulfillment by Amazon.', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Enable Diagnostic Logging', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_DIAGNOSTIC_LOGGING', 'False', 'Enables diagnostic logging for debugging this OSCommerce plugin.', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");
	
	tep_db_query("insert into ".TABLE_CONFIGURATION.
                     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('AWS Access ID', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_AWSACCESSID', '', '<a href=\'https://sellercentral.amazon.com/gp/cba/seller/accesskey/showAccessKey.html/ref=sc_tab_home_cba_access_key\' target=\'_blank\'/>Click here to get your AWS Access ID</a>', '6', '4', now())");
		
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added, use_function, set_function) values ('AWS Secret Key<br/>(<i>this field will be encrypted when displayed for security.</i>)', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_AWSSECRETKEY', '', '<a href=\'https://sellercentral.amazon.com/gp/cba/seller/accesskey/showAccessKey.html/ref=sc_tab_home_cba_access_key\' target=\'_blank\'/>Click here to get your AWS Secret Key</a>', '6', '4', now(), 'crypt', 'tep_draw_input_password_field(')");
	
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Cart expiration time (in minutes)', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CART_EXPIRATION', '0', 'The number of minutes a cart is valid for (0 for no expiration)', '6', '4', now())");
	
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Sort order of display.', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_SORT_ORDER', '0', 'Order in which different payment options you have enabled are displayed. Lowest is displayed first.', '6', '0', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Success Return Page', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_RETURN_URL','', 'Please enter the complete URL of the page you would like your customers to return after a purchase.  If you choose not to specify one, the index osCommerce page will be used', '6', '4', now())");

        // callbacks
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/>CALLBACK OPTIONS<br/><hr/><br/>Enable Callbacks', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_CALLBACK','False', '<i>The Callback API lets you specify shipping and taxes using your own application logic at the time an order is placed when using Checkout by Amazon</i>', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");
	
        $callback_url = 'http://' . $_SERVER['SERVER_NAME'] . ':' . $_SERVER['SERVER_PORT'] . '/catalog/checkout_by_amazon_callback_processor.php'; 
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Callback Page', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_URL','$callback_url', 'Please enter the complete URL of the Callback page. use HTTPS if you are Operating environment is <b>Production</b> else use HTTP.  If you choose not to specify one, the index osCommerce page will be used', '6', '4', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Enable Shipping Calculations', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_SHIPPING','True', 'Should dynamic shipping calculations be enabled as part of Callbacks', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");

        tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Shipping Carrier', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_SHIPPING_CARRIER','USPS', 'Please select which carrier should be used to compute shipping rates. You must install and enable the selected carrier in Administration > Modules > Shipping first.', '6', '3', 'tep_cfg_select_option(array(\'USPS\', \'UPS\', \'FedEx\'), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Enable Tax Calculations', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_TAXES','True', 'Should dynamic tax calculations be enabled as part of Callbacks', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Is Shipping and Handling Taxed', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_IS_SHIPPING_TAXED','True', 'Please specify whether the shipping amount should be taxed as part of Callbacks', '6', '3', 'tep_cfg_select_option(array(\'True\', \'False\'), ', now())");

        // other configuration
	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, date_added) values ('Cancelation Return Page', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_CANCEL_URL', '', 'Please enter the complete URL of the page you would like your customers to return to if they abandon or cancel an order.  If you do not enter one, the default is the main osCommerce catalog page', '6', '4', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Checkout Button Size', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_BUTTON_SIZE', 'Medium', 'Creates either a large(151x27) or medium(126x24) Checkout By Amazon button.', '6', '3', 'tep_cfg_select_option(array(\'Large\',\'Medium\'), ', now())");
	$cba_orange_button = "https://images-na.ssl-images-amazon.com/images/G/01/cba/images/buttons/btn_Chkout-orange-medium-white.gif";

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Button Style', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_BUTTON_STYLE', 'Orange', 'Choose from two styles of buttons', '6', '3', 'tep_cfg_select_option(array(\'Orange\', \'Tan\'), ', now())");
        
        ///////////////////////////////
        // USPS logo and shipping speed
        ///////////////////////////////
        $usps_logo="http://www.usps.com/common/images/v2header/usps_hm_ci_logo2-159x36x8.gif";
        $usps_domestic="\'Express Mail\',\'First-Class Mail\',\'Priority Mail\',\'Parcel Post\',\'None\'";

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/>DOMESTIC SHIPPING SPEED MAPPING<br/><hr/><a href=\'http://www.usps.com/\' target=\'_blank\'><img src=\'$usps_logo\' border=\'0\' alt=\'USPS Logo\' title=\'USPS\'/></a><br/>Standard Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_STANDARD','Parcel Post', 'Maps the Domestic Shipping Career to Standard Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Expedited Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_EXPEDITED','None', 'Maps the Domestic Shipping Career to Expedited Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('One Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_ONEDAY','Express Mail', 'Maps the Domestic Shipping Career to One Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Two Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_TWODAY','Priority Mail', 'Maps the Domestic Shipping Career to Two Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_domestic), ', now())");


        /////////////////////////////
        //USPS International shipping
        /////////////////////////////

        $usps_intl = "\'Global Express Guaranteed\',\'Express Mail International (EMS)\',\'Priority Mail International\',\'Priority Mail International Flat Rate Box\',\'First-Class Mail International\',\'None\'";

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/>INTERNATIONAL SHIPPING SPEED MAPPING<br/><hr/><a href=\'http://www.usps.com/international/\' target=\'_blank\'><img src=\'$usps_logo\' border=\'0\' title=\'USPS\'/></a><br/>Standard Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_STANDARD','Priority Mail International Flat Rate Box', 'Maps the International Shipping Career to Standard Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Expedited Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_EXPEDITED','Global Express Guaranteed', 'Maps the International Shipping Career to Expedited Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('One Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_ONEDAY','None', 'Maps the International Shipping Career to One Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Two Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_TWODAY','None', 'Maps the International Shipping Career to Two Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($usps_intl), ', now())");

        ///////////////////////////////
        // UPS logo and shipping speed
        ///////////////////////////////
        $ups_logo="http://www.ups.com/img/glo_ups_brandmark.gif";
        $ups_domestic = "\'Next Day Air\',\'Next Day Air Intra (Puerto Rico)\',\'Next Day Air Saver\',\'2nd Day Air\',\'3 Day Select\',\'Ground\',\'Ground Commercial\',\'Ground Residential\',\'None\'";

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/><a href=\'http://www.ups.com/content/us/en/shipping/time/service/index.html\' target=\'_blank\'><img src=\'$ups_logo\' border=\'0\' alt=\'UPS Logo\' title=\'UPS\'/></a><br/>Standard Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_STANDARD','Ground', 'Maps the Domestic Shipping Career to Standard Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Expedited Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_EXPEDITED','3 Day Select', 'Maps the Domestic Shipping Career to Expedited Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('One Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_ONEDAY','Next Day Air Saver', 'Maps the Domestic Shipping Career to One Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Two Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_TWODAY','2nd Day Air', 'Maps the Domestic Shipping Career to Two Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_domestic), ', now())");

        ///////////////////////////////
        // UPS International Shipping
        ///////////////////////////////

        $ups_intl = "\'Canada Standard\',\'Worldwide Express\',\'Worldwide Expedited\',\'None\'";

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/><a href=\'http://www.ups.com/content/us/en/shipping/time/service/shipping/index.html\' target=\'_blank\'><img src=\'$ups_logo\' border=\'0\' alt=\'UPS International\' title=\'UPS International\'/></a><br/>Standard Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_STANDARD','None', 'Maps the International Shipping Career to Standard Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Expedited Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_EXPEDITED','Worldwide Expedited', 'Maps the International Shipping Career to Expedited Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('One Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_ONEDAY','None', 'Maps the International Shipping Career to One Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Two Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_TWODAY','Worldwide Express', 'Maps the International Shipping Career to Two Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($ups_intl), ', now())");

        ////////////////////////////////
        // FEDEX logo and shipping speed
        ////////////////////////////////

        $fedex1_logo="http://fedex.com/images/globalhome/globalhome_fedex_corp_logo.gif";
        $fedex1_domestic = "\'Priority (by 10:30AM, later for rural)\',\'2 Day Air\',\'Standard Overnight (by 3PM, later for rural)\',\'First Overnight\',\'Express Saver (3 Day)\',\'Home Delivery\',\'Ground Service\',\'None\'";

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/><a href=\'http://www.fedex.com/ratetools/RateToolsMain.do?link=2\'><img src=\'$fedex1_logo\' border=\'0\' alt=\'Fedex Logo\' title=\'Fedex\'/></a><br/>Standard Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_STANDARD','Home Delivery', 'Maps the Domestic Shipping Career to Standard Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Expedited Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_EXPEDITED','Express Saver (3 Day)', 'Maps the Domestic Shipping Career to Expedited Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('One Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_ONEDAY','Standard Overnight (by 3PM, later for rural)', 'Maps the Domestic Shipping Career to One Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_domestic), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Two Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_TWODAY','2 Day Air', 'Maps the Domestic Shipping Career to Two Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_domestic), ', now())");

        ////////////////////////////////
        // FEDEX International shipping
        ////////////////////////////////
             

        $fedex1_intl = "\'International Priority (1-3 Days)\',\'International Economy (4-5 Days)\',\'International First\',\'Home Delivery\',\'Ground Service\',\'None\'";

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('<br/><a href=\'http://www.fedex.com/international/\' target=\'_blank\'><img src=\'$fedex1_logo\' border=\'0\' alt=\'Fedex Logo\' title=\'Fedex International\'/></a><br/>Standard Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_STANDARD','International Economy (4-5 Days)', 'Maps the International Shipping Career to Standard Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Expedited Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_EXPEDITED','International Priority (1-3 Days)', 'Maps the International Shipping Career to Expedited Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('One Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_ONEDAY','International First', 'Maps the International Shipping Career to One Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_intl), ', now())");

	tep_db_query("insert into ".TABLE_CONFIGURATION.
		     " (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, set_function, date_added) values ('Two Day Shipping', 'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_TWODAY','None', 'Maps the International Shipping Career to Two Day Shipping Speed', '6', '3', 'tep_cfg_select_option(array($fedex1_intl), ', now())");


        // Enable storing shipping at the order product level as that is required for 
        // refund adjustments
        $createTableQuery = tep_db_query("show tables like '" . TABLE_AMAZON_ORDERS_PRODUCTS . "'");
	
        if (!tep_db_num_rows($createTableQuery)) {

            // TODO: Add warning that database table structure will be modified before module runs
            // TODO: Add warning if this update fails
            //
            // create amazon_orders_products table to store order shipping component, 
            // since this data is required for refunds and cancellations
            
            tep_db_query("create TABLE " . TABLE_AMAZON_ORDERS_PRODUCTS . " (" .
                         " orders_products_id int(11) not null," .
                         " products_shipping decimal(15,4) not null default 0," .
                         " products_shipping_tax decimal(15,4) not null default 0," .
                         " products_promotion_price decimal(15,4) not null default 0," .
                         " products_promotion_shipping decimal(15,4) not null default 0," .
                         " products_promotion_tax decimal(15,4) not null default 0," .
                         " products_promotion_claim_code varchar(64) not null default ''," .
                         " products_promotion_merchant_promotion_id varchar(64) not null default ''," .
                         " PRIMARY KEY (orders_products_id))");
        }

        $createTableQuery = tep_db_query("show tables like '" . TABLE_AMAZON_ORDERS_LOCK . "'");
	
        if (!tep_db_num_rows($createTableQuery)) {
            tep_db_query("create TABLE " . TABLE_AMAZON_ORDERS_LOCK . " (" .
                         " lock_key varchar(255) not null," .
                         " lock_value varchar(255) not null," .
                         " PRIMARY KEY (lock_key))");
        }


        // insert the following states into the orders status table
        // these are not available in the default installation of OSCommerce
        // The cancelled status
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('4', '1', 'Cancelled', '1', '1')");
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('4', '2', 'Storniert', '1', '1')");
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('4', '3', 'Cancelado', '1', '1')");


        // The refunded status
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('5', '1', 'Refunded', '1', '1')");
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('5', '2', 'Erstattet', '1', '1')");
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('5', '3', 'Reintegrado', '1', '1')");

        // The system error status
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('6', '1', 'System Error', '1', '1')");
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('6', '2', 'Error', '1', '1')");
	tep_db_query("insert ignore into ".TABLE_ORDERS_STATUS.
		     " (orders_status_id, language_id, orders_status_name, public_flag, downloads_flag) values ('6', '3', 'Error', '1', '1')");


    }

/**
 * @brief removes a configuration entry from the mySQL database 
 * @post a configuration entry has been removed 
 */
    function remove() {
	tep_db_query("delete from ".TABLE_CONFIGURATION.
		     " where configuration_key in ('".implode("', '",$this->keys())."')");
    }

/**
 * @brief returns the list of configuration keys for merchant configuration 
 * @return an array of the configuration keys associated with the install function for the mySQL database 
 * @see install()
 */
    function keys() {
        return array('MODULE_PAYMENT_CHECKOUTBYAMAZON_STATUS',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTID',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_OPERATING_ENVIRONMENT',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_BUTTON_SIZE',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_BUTTON_STYLE',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_SORT_ORDER',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CART_EXPIRATION',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CANCEL_URL',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_RETURN_URL',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_FBA',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_DIAGNOSTIC_LOGGING',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_SIGNING',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_AWSACCESSID',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_AWSSECRETKEY',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_ORDER_MANAGEMENT',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTEMAIL',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTPASSWORD',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTTOKEN',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CBAMERCHANTNAME',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USE_CALLBACK',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_URL',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_SHIPPING',
		     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_TAXES',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_IS_SHIPPING_TAXED',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_CALLBACK_SHIPPING_CARRIER',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_STANDARD',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_EXPEDITED',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_ONEDAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_TWODAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_STANDARD',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_EXPEDITED',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_ONEDAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_TWODAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_STANDARD',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_EXPEDITED',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_ONEDAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_TWODAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_STANDARD',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_EXPEDITED',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_ONEDAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_USPS_INTL_TWODAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_STANDARD',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_EXPEDITED',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_ONEDAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_UPS_INTL_TWODAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_STANDARD',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_EXPEDITED',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_ONEDAY',
                     'MODULE_PAYMENT_CHECKOUTBYAMAZON_FEDEX1_INTL_TWODAY');
    }
}

function tep_draw_input_password_field ($key_value, $key = '') {
    $name = ((tep_not_null($key)) ? 'configuration[' . $key . ']' : 'configuration_value');
    return '<input type="password" name="' . $name . '"/>';  
}

function install_key_file($keyFile) {
    $key =  "";
    $length = 20;

    srand((double)microtime()*1000000);
    $strset = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    $strset .= "abcdefghijklmnopqrstuvwxyz";
    $strset .= "1234567890";

    for($i = 0; $i < $length; $i++) {
       $key .= substr($strset,(rand()%(strlen($strset))), 1);
    }

    if (file_exists($keyFile) && !is_writable($keyFile)) {
       return false;
    }

    $fh = fopen($keyFile, 'w');

    if (!$fh) {
       return false;
    }

    fwrite($fh, $key);
    fclose($fh);

    return true;
}

function decrypt($string) {
    if (trim($string) == "") {
       return $string;
    }

    // get key from disk
    $key = getKey();

    if (!$key) {
       return $string;
    }

    $result = "";
    $string = base64_decode($string);

    for($i=0; $i<strlen($string); $i++) {
       $char = substr($string, $i, 1);
       $keychar = substr($key, ($i % strlen($key))-1, 1);
       $char = chr(ord($char)-ord($keychar));
       $result.=$char;
    }

    return $result;
}

function getKeyFilename() {
    return DIR_FS_CATALOG . ".checkout_by_amazon_key";
}

function getKey() {
    $keyFile = getKeyFilename();

    if (!file_exists($keyFile) || !is_readable($keyFile) || filesize($keyFile) <= 0) {
       return 0;
    }

    $fh = fopen($keyFile, 'r');
    $key = fread($fh, filesize($keyFile));
    fclose($fh);

    return $key;
}
?>
